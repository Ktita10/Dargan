---
/**
 * Galeria.astro - Galería de Imágenes Categorizada
 * 
 * @description Galería con tabs mostrando diferentes aspectos del negocio
 * @features
 * - Sistema de pestañas: Campos, Proceso, Productos, Logística
 * - Grid responsive de imágenes
 * - Modal/Lightbox para ver imágenes ampliadas
 * - Lazy loading de imágenes
 * - Animaciones de transición entre categorías
 * 
 * @importedIn src/pages/index.astro
 */

// Estructura de datos optimizada para la galería
const categories = [
  { id: 'campos', name: 'Campos' },
  { id: 'proceso', name: 'Proceso' },
  { id: 'productos', name: 'Productos' },
  { id: 'logistica', name: 'Logística' }
];

const galleryImages = {
  campos: [
    { src: '/images/paisaje.png', alt: 'Campo de alfalfa' },
    { src: '/images/paisajeAbout.jpg', alt: 'Paisaje agropecuario' },
    { src: '/images/tractortrabajando.jpg', alt: 'Tractor trabajando en el campo' },
    { src: '/images/Patricia.png', alt: 'Variedad Patricia' },
    { src: '/images/Monarca.png', alt: 'Variedad Monarca' }
  ],
  proceso: [
    { src: '/images/tractor.png', alt: 'Tractor en el proceso' },
    { src: '/images/cosechadora.png', alt: 'Cosechadora' },
    { src: '/images/tractortrabajando.jpg', alt: 'Proceso de trabajo' }
  ],
  productos: [
    { src: '/images/productos.jpg', alt: 'Productos de alfalfa' },
    { src: '/images/sacos.jpg', alt: 'Sacos de semillas' },
    { src: '/images/alfalfa.png', alt: 'Alfalfa' },
    { src: '/images/Araucana.png', alt: 'Variedad Araucana' }
  ],
  logistica: [
    { src: '/images/camionCargado.jpg', alt: 'Camión cargado' },
    { src: '/images/empresa.jpg', alt: 'Instalaciones de la empresa' }
  ]
};
---

<section id="galeria" class="pt-28 pb-20 md:pb-32 bg-gray-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    {/* Título y descripción */}
    <div class="text-center mb-12 space-y-4">
      <h1 class="text-4xl md:text-5xl font-bold text-green-900 mb-4">
        Galería de DORGAN ALFALFA
      </h1>
      <p class="text-xl md:text-2xl font-semibold text-green-700 italic max-w-4xl mx-auto">
        Conozca nuestras instalaciones, procesos y productos a través de imágenes reales.
      </p>
    </div>

    {/* Tabs de categorías - Generados dinámicamente */}
    <div class="flex justify-center mb-12 flex-wrap gap-4">
      {categories.map((category, index) => (
        <button 
          class={`tab-button ${index === 0 ? 'active' : ''} px-8 py-3 rounded-full font-semibold transition-all duration-300`}
          data-category={category.id}
          aria-label={`Ver galería de ${category.name}`}
        >
          {category.name}
        </button>
      ))}
    </div>

    {/* Grid de imágenes - Generado dinámicamente */}
    <div class="gallery-container">
      {Object.entries(galleryImages).map(([categoryId, images], index) => (
        <div 
          class={`gallery-grid ${index === 0 ? 'active' : ''}`} 
          data-gallery={categoryId}
          role="tabpanel"
          aria-label={`Galería de ${categories.find(c => c.id === categoryId)?.name}`}
        >
          {images.map((image) => (
            <div class="gallery-item" role="img" aria-label={image.alt}>
              <img 
                src={image.src}
                alt={image.alt}
                class="gallery-image"
                loading="lazy"
                decoding="async"
                width="400"
                height="300"
              />
            </div>
          ))}
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  /* Estilos para los botones de tabs */
  .tab-button {
    background-color: #e5e7eb;
    color: #4b5563;
    border: none;
    cursor: pointer;
    will-change: transform;
  }

  .tab-button:hover {
    background-color: #d1d5db;
    transform: translateY(-2px);
  }

  .tab-button:focus-visible {
    outline: 2px solid #16a34a;
    outline-offset: 2px;
  }

  .tab-button.active {
    background-color: #16a34a;
    color: white;
    box-shadow: 0 4px 6px -1px rgba(22, 163, 74, 0.3);
  }

  /* Grid de galería */
  .gallery-grid {
    display: none;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    animation: fadeIn 0.5s ease-in-out;
  }

  .gallery-grid.active {
    display: grid;
  }

  .gallery-item {
    position: relative;
    overflow: hidden;
    border-radius: 1rem;
    aspect-ratio: 4 / 3;
    cursor: pointer;
    background-color: #f3f4f6;
  }

  .gallery-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 1rem;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    will-change: transform;
  }

  .gallery-item:hover .gallery-image {
    transform: scale(1.05);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.2);
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Responsive */
  @media (min-width: 768px) {
    .gallery-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .gallery-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  /* Optimización para reducir reflows */
  .gallery-container {
    contain: layout style paint;
  }
</style>

<script>
  // Funcionalidad de tabs optimizada
  const initGallery = () => {
    const tabButtons = document.querySelectorAll('.tab-button');
    const galleries = document.querySelectorAll('.gallery-grid');

    // Usar delegación de eventos para mejor rendimiento
    const container = document.querySelector('.flex.justify-center');
    
    if (!container) return;

    container.addEventListener('click', (e) => {
      const button = (e.target as HTMLElement).closest('.tab-button');
      if (!button) return;

      const category = button.getAttribute('data-category');
      if (!category) return;

      // Usar requestAnimationFrame para optimizar animaciones
      requestAnimationFrame(() => {
        // Remover clase active de todos los botones y galerías
        tabButtons.forEach(btn => btn.classList.remove('active'));
        galleries.forEach(gallery => gallery.classList.remove('active'));

        // Agregar clase active al botón clickeado y su galería correspondiente
        button.classList.add('active');
        const targetGallery = document.querySelector(`[data-gallery="${category}"]`);
        if (targetGallery) {
          targetGallery.classList.add('active');
        }
      });
    });
  };

  // Inicializar cuando el DOM esté listo
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initGallery);
  } else {
    initGallery();
  }
</script>
